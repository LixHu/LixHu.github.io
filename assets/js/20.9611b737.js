(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{531:function(a,t,s){"use strict";s.r(t);var r=s(6),e=Object(r.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("blockquote",[s("p",[a._v("最近在准备面试，就整理一篇面试题来备着。多看看也总会有好处，以下都是自己整理，个人理解，如有问题可以进行纠正")])]),a._v(" "),s("h1",{attrs:{id:"php基础知识"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#php基础知识"}},[a._v("#")]),a._v(" PHP基础知识")]),a._v(" "),s("h3",{attrs:{id:"_1-什么是composer-composer是干什么的-工作原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是composer-composer是干什么的-工作原理"}},[a._v("#")]),a._v(" 1. 什么是composer？ composer是干什么的？ 工作原理")]),a._v(" "),s("blockquote",[s("p",[a._v("composer 是PHP的包管理，包依赖管理工具，有了它，就可以用一个命令就可以把一个优秀的项目引用到我们项目中来，\n工作原理： composer像是一个应用商店，提供我们下载开发包。Packaglist 是composer的默认开发包仓库。可以将自己的包提交到Packaglist， 将来你在你的仓库中更新你的代码，\nPackglist 都会自己构建一个新的开发包。")])]),a._v(" "),s("h3",{attrs:{id:"_2-php如何实现静态化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-php如何实现静态化"}},[a._v("#")]),a._v(" 2. PHP如何实现静态化")]),a._v(" "),s("blockquote",[s("ol",[s("li",[a._v("请求页面时判断缓存存不存在，如果存在判断是否过期。")]),a._v(" "),s("li",[a._v("请求页面时缓存存在并且没有过期就直接返回缓存内容给浏览器。")]),a._v(" "),s("li",[a._v("如果页面缓存不存在或者已经过期，则进行正常数据库查询以及页面渲染，同时缓存页面。")])])]),a._v(" "),s("h3",{attrs:{id:"_3-常用的php设计模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-常用的php设计模式"}},[a._v("#")]),a._v(" 3. 常用的PHP设计模式")]),a._v(" "),s("blockquote",[s("p",[a._v("这边我就不一一介绍了，自己看着也有点惆怅- -")])]),a._v(" "),s("ul",[s("li",[a._v("工厂模式")]),a._v(" "),s("li",[a._v("单例模式")]),a._v(" "),s("li",[a._v("观察者模式")])]),a._v(" "),s("blockquote",[s("p",[a._v("基本上我们平时用的MVC框架都是单例模式。就是一个功能只实例化一个对象。")])]),a._v(" "),s("h3",{attrs:{id:"_4-php的优化方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-php的优化方案"}},[a._v("#")]),a._v(" 4. PHP的优化方案")]),a._v(" "),s("blockquote",[s("p",[a._v("这边也就整理一点点0.0")])]),a._v(" "),s("ul",[s("li",[a._v("用单引号代替双引号，因为单引号的执行速度比双引号快。")]),a._v(" "),s("li",[a._v("能将类的方法定义成static， 尽量定义成static。")]),a._v(" "),s("li",[a._v("echo比print快")]),a._v(" "),s("li",[a._v("尽量能使用switch就不使用if else")]),a._v(" "),s("li",[a._v("尽量使用缓存，缓存可使加载速度变快许多")]),a._v(" "),s("li",[a._v("并不是势必面向对象，面向对象开销比较大，实例化一个方法也会占用内存")])]),a._v(" "),s("h3",{attrs:{id:"_5-session-cookie"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-session-cookie"}},[a._v("#")]),a._v(" 5.session& cookie")]),a._v(" "),s("blockquote",[s("p",[a._v("个人理解session和cookie，有更好的建议可以提出来")])]),a._v(" "),s("blockquote",[s("p",[a._v("cookie保存在客户端（浏览器）上，可以把一些数据放到cookie中，典型使用比如购物车，用户未登陆的情况下使用cookie作为缓存，登陆后把cookie传回服务端。\nsession 保存在服务端（服务器）上，基于cookie，cookie中有一个php_session_id的东西，如果用户删除cookie，sessionid就会变化，session也会失效。通常session会保存用户的登陆状态以及信息")])]),a._v(" "),s("h3",{attrs:{id:"_6-说下你目前框架所用到的核心概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-说下你目前框架所用到的核心概念"}},[a._v("#")]),a._v(" 6.说下你目前框架所用到的核心概念")]),a._v(" "),s("blockquote",[s("p",[a._v("Laravel: 服务容器，服务提供者，门面，契约。 这边使用laravel的时间比较短，没有更多的理解。。。。。")])]),a._v(" "),s("blockquote",[s("p",[a._v("服务容器是laravel的核心，是一个loc核心，是管理依赖和运行依赖注入的有力工具。")])]),a._v(" "),s("blockquote",[s("p",[a._v("Tp5： MVC以及缓存，restful设计模式。")])]),a._v(" "),s("h3",{attrs:{id:"_7-什么是csrf攻击-xss攻击-如何防范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-什么是csrf攻击-xss攻击-如何防范"}},[a._v("#")]),a._v(" 7.什么是CSRF攻击，XSS攻击？如何防范")]),a._v(" "),s("ul",[s("li",[a._v("CSRF: 跨域请求伪造， 攻击者盗用你的身份，以你的名义发起恶意请求。\n"),s("ol",[s("li",[a._v("在表单中加入hash值，在服务端进行验证。")]),a._v(" "),s("li",[a._v("在客户端请求时加上随机数")])])]),a._v(" "),s("li",[a._v("XSS： 跨站脚本攻击，攻击者使用使用嵌入恶意脚本代码的方式，用户正常访问页面就会执行恶意代码，从而达到恶意攻击的目的。\n"),s("ol",[s("li",[a._v("文本中尽量使用htmlspecialchars 函数把添加的文本改为html字符串。")]),a._v(" "),s("li",[a._v("使用正则替换script 函数或者其它可执行脚本的标签。")])])])]),a._v(" "),s("h3",{attrs:{id:"_8-你了解restful-api吗-说说干什么用的。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-你了解restful-api吗-说说干什么用的。"}},[a._v("#")]),a._v(" 8.你了解RESTful API吗？说说干什么用的。")]),a._v(" "),s("ul",[s("li",[a._v("RESTful API是目前比较成熟的一套互联内网应用程序API设计理论。  使用url定位资源，使用HTTP动词描述操作，\n"),s("ul",[s("li",[a._v("GET 获取资源")]),a._v(" "),s("li",[a._v("POST 新增资源")]),a._v(" "),s("li",[a._v("PUT 修改资源")]),a._v(" "),s("li",[a._v("DELETE 删除资源")]),a._v(" "),s("li",[a._v("PATCH 更新资源")])])])]),a._v(" "),s("h3",{attrs:{id:"_9-如何实现自动加载-psr-4是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-如何实现自动加载-psr-4是什么"}},[a._v("#")]),a._v(" 9. 如何实现自动加载，PSR-4是什么")]),a._v(" "),s("blockquote",[s("p",[a._v("自动加载")])]),a._v(" "),s("ol",[s("li",[a._v("程序配合 魔术方法__autoload， spl_autoload_register")]),a._v(" "),s("li",[a._v("配合命名空间")])]),a._v(" "),s("blockquote",[s("p",[a._v("PSR-4")])]),a._v(" "),s("ul",[s("li",[a._v("PHP编码规范，它规范了如何从文件路径自动加载类，同时规定了自动加载文件的位置。")])]),a._v(" "),s("h1",{attrs:{id:"数据库方面"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据库方面"}},[a._v("#")]),a._v(" 数据库方面")]),a._v(" "),s("h3",{attrs:{id:"_1-nosql"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-nosql"}},[a._v("#")]),a._v(" 1. nosql")]),a._v(" "),s("ul",[s("li",[a._v("redis")]),a._v(" "),s("li",[a._v("memcache")])]),a._v(" "),s("h3",{attrs:{id:"_2-mysql索引优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-mysql索引优化"}},[a._v("#")]),a._v(" 2. mysql索引优化")]),a._v(" "),s("ul",[s("li",[a._v("建立索引时尽量使用唯一索引，对于唯一值的效果最好")]),a._v(" "),s("li",[a._v("索引长度尽量短。")]),a._v(" "),s("li",[a._v("更新频繁的列不适合建立索引")]),a._v(" "),s("li",[a._v("最左原则")]),a._v(" "),s("li",[a._v("不要创建过多的索引")]),a._v(" "),s("li",[a._v("尽量避免null查询")])]),a._v(" "),s("h3",{attrs:{id:"_3-事务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-事务"}},[a._v("#")]),a._v(" 3. 事务")]),a._v(" "),s("blockquote",[s("p",[a._v("mysql的事务主要用于处理操作量大，复杂度高的数据。只有innodb引擎才支持事务\n事务的操作可以用来保证数据库的完整性，要么全部执行，要么全部不执行")])]),a._v(" "),s("blockquote",[s("p",[a._v("事务必须满足4个条件")])]),a._v(" "),s("ul",[s("li",[a._v("原子性")]),a._v(" "),s("li",[a._v("一致性")]),a._v(" "),s("li",[a._v("隔离性")]),a._v(" "),s("li",[a._v("持久性")])]),a._v(" "),s("h3",{attrs:{id:"_4-读写分离"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-读写分离"}},[a._v("#")]),a._v(" 4. 读写分离")]),a._v(" "),s("blockquote",[s("p",[a._v("读写分离，顾名思义，就是读和写分离出来，把访问的压力从主库转移到从库")])]),a._v(" "),s("blockquote",[s("p",[a._v("更相信的解释的话就自行搜索下")])]),a._v(" "),s("h3",{attrs:{id:"_5-消息队列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-消息队列"}},[a._v("#")]),a._v(" 5.消息队列")]),a._v(" "),s("blockquote",[s("p",[a._v("主要是对于高并发或者一些请求频繁的数据，比如秒杀活动，之类的，实现方式是异步处理，比如用户下单后把这批用户存储到数据库中，\n之后根据数据库中的内容，用定时脚本去处理，比如使用linux的定时任务，以及直接跑PHP脚本实现")])]),a._v(" "),s("h3",{attrs:{id:"_6-数据库两种引擎的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-数据库两种引擎的区别"}},[a._v("#")]),a._v(" 6.数据库两种引擎的区别")]),a._v(" "),s("ul",[s("li",[a._v("MyISam")])]),a._v(" "),s("ol",[s("li",[a._v("不支持实物")]),a._v(" "),s("li",[a._v("不支持外键")]),a._v(" "),s("li",[a._v("支持全文索引和空间索引")]),a._v(" "),s("li",[a._v("对于自增字段，可以和其它字段一起建立索引")])]),a._v(" "),s("ul",[s("li",[a._v("InnoDB")])]),a._v(" "),s("ol",[s("li",[a._v("支持实物")]),a._v(" "),s("li",[a._v("支持外键，因此支持写并发")]),a._v(" "),s("li",[a._v("对于自增字段，InnoDB只有这一列的索引")]),a._v(" "),s("li",[a._v("主键采用聚集索引")])]),a._v(" "),s("h3",{attrs:{id:"_7-redis和memcache的相同点和区别。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-redis和memcache的相同点和区别。"}},[a._v("#")]),a._v(" 7. redis和memcache的相同点和区别。")]),a._v(" "),s("ol",[s("li",[a._v("Redis 和 memcache都是将数据存放在内存中，都是内存数据库，不过memcache可以缓存其它东西，比如图片，视频等。")]),a._v(" "),s("li",[a._v("Redis不仅仅提供简单的K/V类型的数据，还提供了list，set，hash等数据结构的存储")]),a._v(" "),s("li",[a._v("虚拟存储，redis物理内存使用完时，可以将一些很久的没用到的value交换到磁盘")]),a._v(" "),s("li",[a._v("过期策略，memcache在set时就指定，redis需设置expire设定，如果不设定就不过期")]),a._v(" "),s("li",[a._v("memcache数据不可恢复， redis可以使用aof恢复")]),a._v(" "),s("li",[a._v("redis支持数据备份")]),a._v(" "),s("li",[a._v("运行环境不同，memcache可以在windows上运行，redis目前官方只支持linux")])]),a._v(" "),s("h1",{attrs:{id:"服务器方面"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#服务器方面"}},[a._v("#")]),a._v(" 服务器方面")]),a._v(" "),s("h3",{attrs:{id:"_1-常用的linux命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-常用的linux命令"}},[a._v("#")]),a._v(" 1. 常用的linux命令")]),a._v(" "),s("blockquote",[s("p",[a._v("比如一些常用的cd 打开目录，touch 创建文件，rm 删除文件，ls 展示文件，find 查询文件，chmod 更改文件权限\ncrontab 定时任务")])]),a._v(" "),s("h3",{attrs:{id:"_2-linux-搭建lamp环境"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-linux-搭建lamp环境"}},[a._v("#")]),a._v(" 2. linux 搭建lamp环境")]),a._v(" "),s("blockquote",[s("p",[a._v("现在有直接集成的lamp环境的一键安装代码，还可以自己手动搭建。 搭建流程可以查看我另一篇文章")])]),a._v(" "),s("h3",{attrs:{id:"_3-docker"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-docker"}},[a._v("#")]),a._v(" 3. docker")]),a._v(" "),s("blockquote",[s("p",[a._v("目前还不是很熟悉，等熟悉后在整理。")])]),a._v(" "),s("h3",{attrs:{id:"_4-你说下常用的服务端口号"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-你说下常用的服务端口号"}},[a._v("#")]),a._v(" 4. 你说下常用的服务端口号")]),a._v(" "),s("blockquote",[s("p",[a._v("比如：")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("* 80 http\n* 443 https\n* 3306 数据库\n* 6379 redis\n")])])]),s("h1",{attrs:{id:"前端方面"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前端方面"}},[a._v("#")]),a._v(" 前端方面")]),a._v(" "),s("h3",{attrs:{id:"_1-事件冒泡"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-事件冒泡"}},[a._v("#")]),a._v(" 1. 事件冒泡")]),a._v(" "),s("blockquote",[s("p",[a._v("页面上的元素堆叠在一起，每一层元素都可能设有事件，为了执行这个时间，会一层一层找下去。可能点击一个元素的时候会同时执行两个事件，所以我们要阻止冒泡\n使用：")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("    e.stopPropagation \n")])])]),s("blockquote",[s("p",[a._v("有些问题我也不是很清楚，临场发挥吧。。。")])]),a._v(" "),s("h1",{attrs:{id:"算法和其它方面"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#算法和其它方面"}},[a._v("#")]),a._v(" 算法和其它方面")]),a._v(" "),s("h3",{attrs:{id:"_1-常用的排序算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-常用的排序算法"}},[a._v("#")]),a._v(" 1. 常用的排序算法")]),a._v(" "),s("ol",[s("li",[a._v("冒泡排序")])]),a._v(" "),s("blockquote",[s("p",[a._v("冒泡排序思想：以升序为例，从第一个元素开始，对数组中两两相邻的元素进行比较，将较小的元素放在前边，较大的元素放在后边。一轮比较结束之后，一个最大的数沉底，成为数组中的最后一个元素。n个元素，经过n-1轮的比较之后完成排序。")])]),a._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("BubbleSort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$arr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$len")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("count")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$arr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//获取数组长度")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$i")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$i")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$i")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$j")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$len")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$j")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$i")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$j")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$arr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$j")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$arr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$j")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//相邻两个元素进行比较")]),a._v("\n                "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$iTemp")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$arr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$j")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n                "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$arr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$j")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$arr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$j")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n                "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$arr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$j")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$iTemp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$arr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[a._v("快速排序")])]),a._v(" "),s("blockquote",[s("p",[a._v("快速排序思想：\n1．先从数列中取出一个数作为基准数，记为x。\n2．分区过程，将不小于x的数全放到它的右边，不大于x的数全放到它的左边。（这样key的位置左边的没有大于key的，右边的没有小于key的，只需对左右区间排序即可）\n3．再对左右区间重复第二步，直到各区间只有一个数")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("function QuickSort($arr){\n    $num = count($arr);\n    $l = $r = 0;\n    $left = $right = array();\n    for ($i = 1;$i < $num; $i++) {\n        if ($arr[$i] < $arr[0]) {\n            $left[] = $arr[$i];\n            $l++;\n        } else {\n            $right[] = $arr[$i];\n            $r++; //\n        }\n    }\n    if($l > 1) {\n        $left = QuickSort($left);\n    }\n    $new_arr = $left;\n    $new_arr[] = $arr[0];\n    if ($r > 1) {\n        $right = QuickSort($right);\n    }\n    for($i = 0;$i < $r; $i++) {\n        $new_arr[] = $right[$i];\n    }\n    return $new_arr;\n}\n")])])]),s("h3",{attrs:{id:"_2-二分查找法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-二分查找法"}},[a._v("#")]),a._v(" 2. 二分查找法")]),a._v(" "),s("blockquote",[s("p",[a._v("适用于数据量比较大时，数据首先排好序。确定中欧冠建位置$mid，将查找的值与$arr[$mid]进行比较，若相等，查找成功返回此值，否则继续进行查找")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("\n<?php\n    function Search($a,$val){\n        $low = 0;\n        $high= count($a) - 1;\n        while($low <= $high){\n            $mid = intval(($low+$high)/2);\n            if($a[$mid] == $val)\n                return $mid;\n            if($a[$mid] > $val){\n                $high = $mid - 1;\n            }else{\n                $low = $mid + 1;\n            }\n        }\n        return -1;\n    }\n")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);