(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{539:function(t,e,n){"use strict";n.r(e);var r=n(6),o=Object(r.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("blockquote",[n("p",[t._v("最近看了redux很久，但是还是决定不用了，不是没学会，是感觉太繁琐，就一个简单的网站主页，感觉没必要套那么复杂的东西，就决定用了mobx，也对自己有点小失望，哈哈哈，最近也在备考，学习成本有点大了。")])]),t._v(" "),n("blockquote",[n("p",[t._v("下面我们就来讲怎么安装和使用mobx，这边前期一直用的yarn，所以这边一直会用yarn安装")])]),t._v(" "),n("ol",[n("li",[t._v("首先安装mobx & mobx-react")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("    yarn add mobx mobx-react\n")])])]),n("blockquote",[n("p",[t._v("其实mobx这边不需要ts的包装，这边只需要安装mobx 和mobx-react即可。")])]),t._v(" "),n("blockquote",[n("p",[t._v("然后创建stores 目录，放入ui.ts 文件(放入的是ui的公共变量以及可变变量，这边的配置还是看个人习惯。)")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("    import { observable, computed, action} from \"mobx\";\n    \n    class UIStore {\n        @observable exList: Array<any> =  [123, 321, 123, 123, 123, 123];\n        @observable activeMenu: string = 'index';\n    \n        @action setActiveMenu = (index: string) =>{\n            this.activeMenu = index\n        }\n    \n        @action setExList = (value: Array<any>) => {\n            this.exList = value\n        }\n    }\n    \n    export default UIStore\n")])])]),n("blockquote",[n("p",[t._v("接着在当前目录创建index.ts 用来初始化uiStore")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("    import UIStore from './ui'\n    \n    const initStore = () => ({\n        ui: new UIStore\n    })\n    \n    export { initStore }\n")])])]),n("blockquote",[n("p",[t._v("至此，项目文件中的mobx的基本文件创建完毕，接下来我们来使用mobx吧")])]),t._v(" "),n("blockquote",[n("p",[t._v("在index.tsx 中编辑文件 引入 mobx （目录结构和其它配置等在前几篇文章，这边就不一一介绍了） 如果感兴趣可以去看一下。")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("    import { initStore } from \"./stores\";\n    import * as mobx from 'mobx';\n    import { Provider } from 'mobx-react';\n")])])]),n("blockquote",[n("p",[t._v("这边引入了mobx初始化文件和mobx 以及mobx-react中的Provider")])]),t._v(" "),n("blockquote",[n("p",[t._v("render 里面修改结构")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("    ReactDOM.render(\n      // <React.StrictMode>\n+        <Provider ui={ store.ui }>\n            <App />\n+        </Provider>,\n      // </React.StrictMode>\n      document.getElementById('root')\n    );\n")])])]),n("blockquote",[n("p",[t._v("这样，我们就能在组件中使用mobx的功能了。下面开始使用")])]),t._v(" "),n("blockquote",[n("p",[t._v("修改 component/IndexCard/index.tsx")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('import React from "react";\nimport { Card, List } from "antd";\nimport { inject, observer } from "mobx-react";\n\n- export interface CardInterface { Items?: Array<any> }\n@inject(\'ui\') @observer\n- export default class IndexCard extends React.Component<CardInterface, any> {\n+ export default class IndexCard extends React.Component<any, any> {\n    componentDidMount(): void {\n    }\n\n    render() {\n+        let { exList } = this.props.ui\n        return (\n            <div>\n                <Card title="最新表情" style={{ width: "70%" }}>\n                    <List  grid={{\n                        gutter: 16,\n                        xs: 1,\n                        sm: 2,\n                        md: 4,\n                        lg: 4,\n                        xl: 6,\n                        xxl: 3,\n-                    }} dataSource={ this.props.Items } renderItem={ item => (\n+                    }} dataSource={ exList } renderItem={ item => (\n                        <List.Item>\n                            <img src=\'/logo.png\' alt="" width="100%" height="100%"/>\n                        </List.Item>\n                    )}/>\n                </Card>\n            </div>\n        )\n    }\n}\n\n')])])]),n("blockquote",[n("p",[t._v("这样的展示效果和上面一期的结果是一样的，可以测试一下，"),n("font",{attrs:{color:"red"}},[t._v("上面的 - 是删除的内容， + 是更新的内容")]),t._v("，复制的时候可以注意一下")],1)]),t._v(" "),n("blockquote",[n("p",[t._v("先说到这里，后面会更新后端异步请求和接口的布置文件，应该更新会比较晚，马上考试了。2333 ，等吧。这个月应该还会更新一波~")])])])}),[],!1,null,null,null);e.default=o.exports}}]);